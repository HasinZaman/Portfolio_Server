var searchIndex = JSON.parse('{\
"single_thread_server":{"doc":"","t":[5,0,0,0,5,0,0,0,0,5,5,5,5,0,0,0,13,13,3,4,13,13,13,8,13,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,12,12,12,12,12,12,4,4,8,13,13,4,4,4,4,13,11,11,11,11,11,11,11,11,11,11,11,11,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,11,11,11,11,11,13,13,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,11,11,11,11,11,11,13,13,13,13,10,11,11,11,11,11,11,13,13,5,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,12,0,0,0,13,13,13,13,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,5,5,5,0,0,3,14,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,5,5,5,3,11,11,12,11,11,12,11,11,11,11,12,12,11,11,11,12,12,12,12,11,11,12,11,11,11,11,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,12,12,12,12,12,11,11,11,14,11,11,11,11,5,11,11,11,11,11,11,11,11,11],"n":["main","server","sql_reader","file_reader","handle_connection","http","logger","method_logic","setting","start","get_file_content_bytes","get_file_content_string","parse","body","request","response","Application","Audio","Body","ContentType","Image","Multipart","Text","VariantName","Video","borrow","borrow","borrow_mut","borrow_mut","content","content_type","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","get_variant","get_variant","init","init","into","into","lift_into","lift_into","new","sculpt","sculpt","subset","subset","to_string","try_from","try_from","try_into","try_into","type_id","type_id","value","vzip","vzip","0","0","0","0","0","0","Application","Audio","Constructor","EDIFACT","EDI_X12","Image","Multipart","Text","Video","alternative","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","css","csv","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","form_data","from","from","from","from","from","from","get_variant","get_variant","get_variant","get_variant","get_variant","get_variant","gif","html","init","init","init","init","init","init","into","into","into","into","into","into","javascript","javascript","jpeg","json","ld_json","lift_into","lift_into","lift_into","lift_into","lift_into","lift_into","mixed","mp4","mpeg","mpeg","new","new","new","new","new","new","new","octet_stream","ogg","parse_value","pdf","plain","png","quicktime","related","sculpt","sculpt","sculpt","sculpt","sculpt","sculpt","subset","subset","subset","subset","subset","subset","svg_xml","tiff","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vnd_djvu","vnd_microsoft_icon","vnd_rn_realaudio","vzip","vzip","vzip","vzip","vzip","vzip","webm","x_flv","x_icon","x_ms_wma","x_ms_wmv","x_msvideo","x_shockwave_flash","x_wav","x_www_form_urlencoded","xhtml_xml","xml","xml","zip","boundary","method","parser_error","request","Connect","Delete","Get","Head","Method","Options","Patch","Post","Put","Trace","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","lift_into","new","sculpt","subset","to_string","try_from","try_into","type_id","vzip","body","body","body","body","file","file","file","file","file","file","file","url","url","InvalidMethod","ParserError","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","lift_into","sculpt","subset","try_from","try_into","type_id","vzip","0","get_data","get_key_value_pair","get_start_line","parse","response","response_status_code","Response","append_to","as_bytes","body","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","lift_into","sculpt","status","subset","try_from","try_into","type_id","vzip","Accepted","AlreadyReported","BadGateway","BadRequest","Conflict","Continue","Created","EarlyHints","ExpectationFailed","FailedDependency","Forbidden","Found","GatewayTimeout","Gone","HTTPVersionNotSupported","ImATeapot","InsufficientStorage","InternalServerError","LengthRequired","Locked","LoopDetected","MethodNotAllowed","MisdirectedRequest","MultiStatus","MultipleChoice","NetworkAuthenticationRequired","NoContent","NonAuthoritativeInformation","NotAcceptable","NotExtended","NotFound","NotImplemented","NotModified","Ok","PartialContent","PayloadTooLarge","PaymentRequired","PermanentRedirect","PreconditionFailed","PreconditionRequired","Processing","ProxyAuthenticationRequired","RangeNotSatisfiable","RequestHeaderFieldsTooLarge","RequestTimeout","ResetContent","ResponseStatusCode","SeeOther","ServiceUnavailable","SwitchingProtocols","TemporaryRedirect","TooEarly","TooManyRequests","URITooLong","Unauthorized","UnavailableForLegalReasons","UnprocessableEntity","UnsupportedMediaType","UpgradeRequired","VariantAlsoNegotiates","as_ref","as_statement","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","get_code","init","into","lift_into","run","sculpt","split_at_capital","subset","to_owned","to_string","try_from","try_into","type_id","vzip","with","log","log_file_check","set_up","MethodLogic","borrow","borrow_mut","connect","default_get_logic","default_not_allowed_logic","delete","deref","deref_mut","drop","from","get","head","init","into","lift_into","option","patch","post","put","sculpt","subset","trace","try_from","try_into","type_id","vzip","DomainPath","ServerSetting","address","allow","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","fmt","fmt","from","from","init","init","into","into","lift_into","lift_into","load","path","paths","port","sculpt","sculpt","subset","subset","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DataBase","borrow","borrow_mut","db_host","db_name","db_password","db_port","db_username","deref","deref_mut","drop","env_var_to_variable","execute","fmt","from","get_conn","get_database","init","into","lift_into","sculpt","subset","try_from","try_into","type_id","vzip"],"q":["single_thread_server","","","single_thread_server::server","","","","","","","single_thread_server::server::file_reader","","","single_thread_server::server::http","","","single_thread_server::server::http::body","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","single_thread_server::server::http::body::ContentType","","","","","","single_thread_server::server::http::body::value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","single_thread_server::server::http::body::value::Multipart","single_thread_server::server::http::request","","","single_thread_server::server::http::request::method","","","","","","","","","","","","","","","","","","","","","","","","","","","","single_thread_server::server::http::request::method::Method","","","","","","","","","","","","","single_thread_server::server::http::request::parser_error","","","","","","","","","","","","","","","","","","single_thread_server::server::http::request::parser_error::ParserError","single_thread_server::server::http::request::request","","","","single_thread_server::server::http::response","","single_thread_server::server::http::response::response","","","","","","","","","","","","","","","","","","","","single_thread_server::server::http::response::response_status_code","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","single_thread_server::server::logger","","","single_thread_server::server::method_logic","","","","","","","","","","","","","","","","","","","","","","","","","","","single_thread_server::server::setting","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","single_thread_server::sql_reader","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Server module is responsible for the start-up and handling …","","file_reader module is responsible for storing functions …","handle_connection is responsible for addressing the …","http module is responsible for defining how HTTP requests …","logger module handles logging messages for debugging …","Method Logic module is response for structs and methods …","Setting module handles the reading and storing of server …","start up server on specified address and port","get_file_content_bytes returns vector of bytes of file …","get_file_content_string returns string content of a file","parse method converts a file path into a PathBuf","body module is responsible for how HTTP body are parsed …","request module is responsible for enums, structs and …","response module is responsible for all structs, enums and …","","","Body struct defines the structure of an HTTP body","ContentType enum define the different types types of …","","","","VariantName trait defines method to return string of …","","","","","","","","","","","","","","","","","","get_variant returns a string to identify variant","","","","","","","","Constructor that creates a new ContentType from string","","","","","","","","","","","","value module defines the specific Enums for each of the …","","","","","","","","","Application enum defines the variants of …","Application enum defines the variants of ContentType::Audio","generic constructor trait define method signature for new …","","","Application enum defines the variants of ContentType::Image","Application enum defines the variants of …","Application enum defines the variants of ContentType::Text","Application enum defines the variants of ContentType::Video","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","parse_value is function to create any of the enums in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Method module define enums and method that store useable …","Parser_error module defines enums required to parsing …","request module is responsible for functions parsing HTTP …","","","","","Method enum define the HTTP Method and inputted parameters","","","","","","","","","","","","","","","","new constructor creates a method from the extracted …","","","","","","","","","","","","","","","","","","","","","","ParserError enum defines variants that represent errors …","","","","","","","","","","","","","","","","","","get_data method extras metadata and possible Body from …","get_key_value_pair extracts key and associated value from …","get_start_line method extracts the method, http version …","parse method converts raw http bytes into Method enum","response module is responsible for structs and functions …","","Response struct define the Response structure","","as_bytes provides a bytes required in order send response","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ResponseStatusCode is a enum of all HTTP response status …","","","","","","","","","","","","","","","","","","","","","","","","","get_code method gets the code number of enum variant","","","","","","split_at_capital returns a string of ResponseStatusCode …","","","","","","","","","log method adds message to log.txt","log_file_check checks if log.txt exists","set_up method ensures there exists a “log.txt” for …","MethodLogic stores the method required for any given HTTP …","","","","Default implementation of Get method","Default implementation of method is not allowed to be …","","","","","","","","","","","","","","","","","","","","","","DomainPath defines the path of domain in the source …","ServerSetting is a struct that stores key information …","","","","","","","","","","","","","","","","","","","","","","","","","load functions read settings.ron","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,1,0,1,1,2,1,2,2,2,1,2,1,2,1,2,1,2,1,2,3,1,1,2,1,2,1,2,1,1,2,1,2,1,1,2,1,2,1,2,0,1,2,4,5,6,7,8,9,0,0,0,10,10,0,0,0,0,11,10,12,13,11,14,15,10,12,13,11,14,15,14,14,10,12,13,11,14,15,10,12,13,11,14,15,10,12,13,11,14,15,11,10,12,13,11,14,15,10,12,13,11,14,15,13,14,10,12,13,11,14,15,10,12,13,11,14,15,10,14,13,10,10,10,12,13,11,14,15,11,15,12,15,16,10,12,13,11,14,15,10,10,0,10,14,13,15,11,10,12,13,11,14,15,10,12,13,11,14,15,13,13,10,12,13,11,14,15,10,12,13,11,14,15,10,12,13,11,14,15,13,13,12,10,12,13,11,14,15,15,15,13,12,15,15,10,12,10,10,10,14,10,17,0,0,0,18,18,18,18,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,19,20,21,22,23,24,19,20,21,25,22,26,27,28,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,29,0,0,0,0,0,0,0,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,31,31,31,31,31,31,31,31,0,0,0,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,33,34,33,34,33,34,33,34,33,34,33,34,33,34,33,34,33,34,33,34,33,34,33,34,33,34,33,33,33,34,33,34,33,34,33,34,33,34,33,34,0,35,35,35,35,35,35,35,35,35,35,0,35,35,35,35,0,35,35,35,35,35,35,35,35,35],"f":[[[]],null,null,null,[[["tcpstream",3],["methodlogic",3],["serversetting",3]]],null,null,null,null,[[["methodlogic",3]]],[[["path",3]],["option",4,[["vec",3,[["u8",15]]]]]],[[["path",3]],["option",4,[["string",3]]]],[[["str",15],["str",15],["vec",3]],["option",4,[["pathbuf",3]]]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4,[["contenttype",4],["parsererror",4]]]],[[]],[[]],[[],["result",4,[["cnil",4]]]],[[],["result",4,[["cnil",4]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],null,null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["str",15]],["result",4,[["parsererror",4]]]],[[["str",15]],["result",4,[["application",4],["parsererror",4]]]],[[["str",15]],["result",4,[["audio",4],["parsererror",4]]]],[[["str",15]],["result",4,[["image",4],["parsererror",4]]]],[[["str",15]],["result",4,[["multipart",4],["parsererror",4]]]],[[["str",15]],["result",4,[["text",4],["parsererror",4]]]],[[["str",15]],["result",4,[["video",4],["parsererror",4]]]],null,null,[[["str",15]],["result",4,[["parsererror",4]]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["cnil",4]]]],[[],["result",4,[["cnil",4]]]],[[],["result",4,[["cnil",4]]]],[[],["result",4,[["cnil",4]]]],[[],["result",4,[["cnil",4]]]],[[],["result",4,[["cnil",4]]]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[]],[[["string",3],["string",3],["option",4,[["body",3]]]],["result",4,[["method",4],["parsererror",4]]]],[[]],[[],["result",4,[["cnil",4]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[]],[[]],[[],["result",4,[["cnil",4]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[["split",3,[["str",15]]]],["result",4,[["parsererror",4]]]],[[["str",15]],["result",4,[["parsererror",4]]]],[[["option",4,[["str",15]]]],["result",4,[["parsererror",4]]]],[[],["result",4,[["parsererror",4]]]],null,null,null,null,[[],["vec",3,[["u8",15]]]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[]],[[]],null,[[],["result",4,[["cnil",4]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],[[],["result",4,[["cow",4,[["statement",3]]],["error",4]]]],[[]],[[]],[[],["responsestatuscode",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["u16",15]],[[],["usize",15]],[[]],[[]],[[],["result",4,[["queryresult",3,[["text",3]]],["error",4]]]],[[]],[[["str",15]],["string",3]],[[],["result",4,[["cnil",4]]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["querywithparams",3]],[[["str",15],["string",3]]],[[],["bool",15]],[[]],null,[[]],[[]],null,[[],["box",3,[["fn",8]]]],[[],["box",3,[["fn",8]]]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],null,null,[[],["usize",15]],[[]],[[]],null,null,null,null,[[]],[[],["result",4,[["cnil",4]]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["serversetting",3]],null,null,null,[[]],[[]],[[],["result",4,[["cnil",4]]]],[[],["result",4,[["cnil",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],null,null,null,null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["str",15],["fn",8]],["vec",3]],[[["formatter",3]],["result",6]],[[]],[[],["pooledconn",3]],[[],["option",4,[["database",3]]]],[[],["usize",15]],[[]],[[]],[[]],[[],["result",4,[["cnil",4]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[4,"ContentType"],[3,"Body"],[8,"VariantName"],[13,"Application"],[13,"Audio"],[13,"Image"],[13,"Multipart"],[13,"Text"],[13,"Video"],[4,"Application"],[4,"Multipart"],[4,"Audio"],[4,"Image"],[4,"Text"],[4,"Video"],[8,"Constructor"],[13,"form_data"],[4,"Method"],[13,"Post"],[13,"Put"],[13,"Delete"],[13,"Patch"],[13,"Get"],[13,"Head"],[13,"Trace"],[13,"Connect"],[13,"Options"],[4,"ParserError"],[13,"InvalidMethod"],[3,"Response"],[4,"ResponseStatusCode"],[3,"MethodLogic"],[3,"ServerSetting"],[3,"DomainPath"],[3,"DataBase"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};